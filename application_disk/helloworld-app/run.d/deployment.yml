apiVersion: v1
kind: ConfigMap
metadata:
  name: caddy-global-options
  namespace: caddy-system
data:
  acmeCA: internal
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: blindllamav2
  annotations:
    kubernetes.io/ingress.class: caddy
spec:
  rules:
  - host: api.helloworld-app.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: blindllamav2
            port:
              number: 80
---
kind: Service
apiVersion: v1
metadata:
  name: blindllamav2
spec:
  type: ClusterIP
  selector:
    app: blindllamav2
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blindllamav2
  labels:
    app: blindllamav2
spec:
  selector:
    matchLabels:
      app: blindllamav2
  template:
    metadata:
      labels:
        app: blindllamav2
    spec:
      restartPolicy: Always
      containers:
        - name: blindllamav2
          image: docker.io/library/helloworld-http:latest
          imagePullPolicy: Never
          ports:
          - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: attestation-server
  namespace: caddy-system
  labels:
    app: attestation-server
spec:
  selector:
    matchLabels:
      app: attestation-server
  template:
    metadata:
      labels:
        app: attestation-server
    spec:
      restartPolicy: Always
      volumes:
        - name: attestation-store
          persistentVolumeClaim:
            claimName: local-path-pvc

      containers:
        - name: attestation-server
          image: docker.io/library/attestation-server:latest
          imagePullPolicy: Never
          env:
          - name: PORT
            value: "80"
          ports:
          - containerPort: 80
          volumeMounts:
          - name: attestation-store
            mountPath: /web
            readOnly: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: attestation-server
  namespace: caddy-system
  annotations:
    kubernetes.io/ingress.class: caddy
spec:
  rules:
  - host: attestation-endpoint.api.helloworld-app.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: attestation-server
            port:
              number: 80
---
kind: Service
apiVersion: v1
metadata:
  name: attestation-server
  namespace: caddy-system
spec:
  type: ClusterIP
  selector:
    app: attestation-server
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tpm-device-plugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: tpm-device-plugin
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: tpm-device-plugin
    spec:
      priorityClassName: "system-node-critical"
      containers:
      - image: k8s-tpm-device-plugin:latest
        imagePullPolicy: IfNotPresent
        name: tpm-device-plugin
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - name: device-plugins
          mountPath: /var/lib/kubelet/device-plugins
      volumes:
      - name: device-plugins
        hostPath:
          path: /var/lib/kubelet/device-plugins
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-caddy-ns
  namespace: caddy-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: caddy-ingress
  namespace: caddy-system
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: caddy-ingress-controller
  ingress:
  - from:
    - ipBlock:
        cidr: 0.0.0.0/0
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: caddy-egress
  namespace: caddy-system
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: caddy-ingress-controller
  policyTypes:
  - Egress
  egress:
  - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-to-attestation-server
  namespace: caddy-system
spec:
  podSelector:
    matchLabels:
      app: attestation-server
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: "caddy-system"
      podSelector:
        matchLabels:
          app.kubernetes.io/name: caddy-ingress-controller
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-to-blindllamav2
spec:
  podSelector:
    matchLabels:
      app: blindllamav2
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: "caddy-system"
      podSelector:
        matchLabels:
          app.kubernetes.io/name: caddy-ingress-controller